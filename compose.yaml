services:
  library-service:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - my_media:/files/media
    command: >
      sh -c "python manage.py wait_for_db &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  db:
    image: postgres:14-alpine3.20
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - ./:/app
    command: >
      sh -c "celery -A core worker --loglevel=info"

  celery_beat:
    build:
      context: .
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - ./:/app
    command: >
      sh -c "celery -A core beat --loglevel=info"

# run bot
  bot:
    build:
      context: .
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - ./:/app
    command: >
      sh -c "python library_bot/bot.py"

volumes:
  my_db:
  my_media:
